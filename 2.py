def srt(nums): # Ф-ция сортировки, на вход подается неотсортированный список
    '''
    nums - неотсортированный список
    '''
    if len(nums) <= 1: #Если длина <= 1 его сортировать не нужно, везвращаем его
        return nums
    else:
        q = nums[len(nums) // 2] #Средний элемент
    l_r = [n for n in nums if n < q] #Список элементов меньше среднего
    e_r = [q] * nums.count(q) # Средний элемент в своем количестве, заданном в списке
    r_r = [n for n in nums if n > q] #Список элементов больше среднего
    return srt(l_r) + e_r + srt(r_r) #Сортируем начальный и конечный списки, средний элемент не сортируем


with open('magical.csv', 'r', encoding='UTF-8') as f: #Открываем данный файл с зельями
    d = {} #Создаем словарь, в котором ключ - название зелья, значение - кол-во этого зелья
    f = f.readlines()
    f = f[1:] #Обрежем строку с названиями колонок
    for i in range(len(f)):
        i1 = f[i].split(',') #Разобьем строку на отдельные элементы
        if i1[1] == '-1': #Если значение = -1, заменим его на 0
            i1[1] = '0'
            f[i] = ','.join(i1)
    counts = [] #Список из количеств зелий
    for i in f:
        i1 = i.split(',')
        if int(i1[1]) not in counts: #Если такое количество ещё не встречалось, добавим его
            counts.append(int(i1[1]))
    counts = srt(counts) #Сортируем список по возрастанию
    res = [] #Итоговый список данный строк по возрастанию количества зелий
    for i in range(len(counts)):
        for j in f:
            j1 = j.split(',')
            if int(j1[1]) == counts[i]: #Если кол-во в строке равно кол-ву в отсортированном списке
                res.append(j.strip()) #Добавляем без символа перехода на новую строку
    for i in range(5):
        rk = res[i].split(',')
        print(f'Зелья {rk[0]} осталось {rk[1]}') #Выводим первые 5, кол-во которых минимально
